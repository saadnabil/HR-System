<?php

namespace App\Models;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Str;

/**
 * @property Collection|JobOfferSection[] $sections
 */
class CompanyJobRequest extends Model
{
    use HasFactory, SoftDeletes;

    protected $guarded = [];
    protected $date = ['deleted_at'];

//    protected $dates = [
//        'start_date',
//        'end_date'
//    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function ($jobRequest) {
            $jobRequest->form_link = Str::random(8);
        });
    }

    public function job_requests()
    {
        return $this->hasMany(JobRequest::class);
    }

    public function sections()
    {
        return $this->hasMany(JobOfferSection::class);
    }

    public function answers()
    {
        return $this->hasMany(JobOfferAnswer::class);
    }

    public function users()
    {
        return $this->hasMany(JobOfferUser::class);
    }

    public function seen_users()
    {
        return $this->users()->where("job_offer_users.is_seen", "1");
    }

    public function get_status()
    {
        if ($this->isExpired()) {
            return __('Expired');
        } elseif ($this->isPending()) {
            return __('Pending');
        }
        return __('Active');
    }

    public function isExpired()
    {
        $date = Carbon::now()->format('Y-m-d');
        $end_date = new Carbon($this->end_date);

        return $date > $end_date;
    }

    public function isPending()
    {
        $date = Carbon::now()->format('Y-m-d');
        $start_date = new Carbon($this->start_date);

        return $date < $start_date;
    }
}
